def buscar_spots_noria():
    return [
        [
            [['SM'], [(213, 189)], (398, 240)],  # 0
            [['EF'], [(222, 189)], (244, 146)]
        ]
    ]


def buscar_spots_k1_k2():
    return [
        ## K1
        [
            [['SM', 'MG', 'BK'], [(42, 233)], (398, 240)],  # 0
            [['DL'], [(45, 233)], (258, 136)]
        ],
        [
            [['SM', 'MG', 'BK'], [(84, 236)], (398, 240)],  # 1
            [['DL'], [(78, 235)], (427, 288)]
        ],
        [
            [['SM', 'MG', 'BK'], [(107, 236)], (398, 240)],  # 2
            [['DL'], [(110, 236)], (329, 200)]
        ],
        [
            [['SM', 'MG', 'BK'], [(151, 238)], (398, 240)],  # 3
            [['DL'], [(152, 238)], (361, 242)]
        ],
        [
            [['SM', 'MG', 'BK'], [(168, 225)], (398, 240)],  # 4
            [['DL'], [(170, 224)], (345, 217)]
        ],
        [
            [['SM', 'MG', 'BK'], [(176, 202)], (398, 240)],  # 5
            [['DL'], [(176, 201)], (384, 222)],
        ],
        [
            [['SM', 'MG', 'BK'], [(192, 180)], (398, 240)],  # 6
            [['DL'], [(196, 179)], (321, 183)]
        ],
        [
            [['SM', 'MG', 'BK'], [(216, 158)], (398, 240)],  # 7
            [['DL'], [(219, 158)], (243, 203)]
        ],
        [
            [['SM', 'MG', 'BK'], [(218, 141)], (398, 240)],  # 8
            [['DL'], [(221, 141)], (313, 217)]
        ],
        [
            [['SM', 'MG', 'BK'], [(235, 128)], (398, 240)],  # 9
            [['DL'], [(235, 132)], (230, 362)]
        ],
        [
            [['SM', 'MG', 'BK'], [(235, 93)], (398, 240)],  # 10
            [['DL'], [(235, 96)], (251, 339)]
        ],
        [
            [['SM', 'MG', 'BK'], [(226, 84)], (398, 240)],  # 11
            [['DL'], [(227, 84)], (207, 195)]
        ],
        [
            [['SM', 'MG', 'BK'], [(218, 43)], (398, 240)],  # 12
            [['DL'], [(220, 45)], (204, 269)]
        ],
        [
            [['SM', 'MG', 'BK'], [(191, 38)], (398, 240)],  # 13
            [['DL'], [(194, 38)], (242, 161)]
        ],

        ##K2

        [
            [['SM', 'MG', 'BK'], [(182, 15)], (398, 240)],  # 14
            [['DL'], [(184, 13)], (403, 128)]
        ],
        [
            [['SM', 'MG', 'BK'], [(154, 53)], (398, 240)],  # 15
            [['DL'], [(152, 56)], (328, 374)]
        ],
        [
            [['SM', 'MG', 'BK'], [(140, 45)], (398, 240)],  # 16
            [['DL'], [(144, 45)], (281, 210)]
        ],
        [
            [['SM', 'MG', 'BK'], [(148, 15)], (398, 240)],  # 17
            [['DL'], [(152, 13)], (369, 169)]
        ],
        [
            [['SM', 'MG', 'BK'], [(127, 20)], (398, 240)],  # 18
            [['DL'], [(129, 18)], (439, 162)]
        ],
        [
            [['SM', 'MG', 'BK'], [(127, 20)], (398, 240)],  # 19  FALTA CONFIGURAR
            [['DL'], [(129, 18)], (439, 162)]
        ],
        [
            [['SM', 'MG', 'BK'], [(116, 62)], (398, 240)],  # 20
            [['DL'], [(121, 62)], (281, 204)]
        ],
        [
            [['SM', 'MG', 'BK'], [(73, 62)], (398, 240)],  # 21
            [['DL'], [(77, 63)], (275, 217)]
        ],
        [
            [['SM', 'MG', 'BK'], [(82, 28)], (398, 240)],  # 22
            [['DL'], [(84, 24)], (375, 150)]
        ],
        [
            [['SM', 'MG', 'BK'], [(56, 36)], (398, 240)],  # 23
            [['DL'], [(60, 34)], (312, 188)]
        ],
        [
            [['SM', 'MG', 'BK'], [(43, 49)], (398, 240)],  # 24
            [['DL'], [(46, 49)], (275, 201)]
        ]
    ]


def buscar_spots_k3():
    return [
        [
            [['SM', 'MG', 'BK'], [(166, 95)], (398, 240)],  # 0
            [['DL'], [(170, 90)], (420, 146)],
            [['EF'], [(175, 91)], (361, 191)]
        ],
        [
            [['SM', 'MG', 'BK'], [(196, 123)], (398, 240)],  # 1
            [['DL'], [(199, 121)], (388, 117)],
            [['EF'], [(197, 115)], (466, 215)]
        ],
        [
            [['SM', 'MG', 'BK'], [(182, 139)], (398, 240)],  # 2
            [['DL'], [(185, 139)], (334, 233)],
            [['EF'], [(188, 139)], (334, 233)]
        ],
        [
            [['SM', 'MG'], [(164, 130)], (398, 240)],  # 3
            [['DL'], [(169, 129)], (231, 173)]
        ],
        [
            [['SM', 'MG'], [(135, 149)], (398, 240)],  # 4
            [['DL', 'EF'], [(123, 124)], (427, 217)]
        ],
        [
            [['SM', 'MG', 'BK'], [(121, 126)], (398, 240)],  # 5
            [['DL'], [(136, 147)], (433, 251)],
            [['EF'], [(136, 143)], (433, 251)]
        ],
        [
            [['SM', 'MG'], [(109, 146)], (398, 240)],  # 6
            [['DL'], [(108, 142)], (430, 257)],
            [['EF'], [(108, 140)], (433, 251)]
        ]
    ]


def buscar_spots_tk2():
    return [
        [
            [['SM', 'MG', 'BK'], [(113, 166)], (398, 240)],  # 0
            [['DL', 'EF'], [(117, 163)], (365, 121)]
        ],
        [
            [['SM', 'MG', 'BK'], [(72, 171)], (398, 240)],  # 1
            [['DL', 'EF'], [(74, 168)], (365, 126)]
        ],
        [
            [['SM', 'MG', 'BK'], [(35, 208)], (398, 240)],  # 2
            [['DL', 'EF'], [(40, 204)], (386, 125)]
        ],
        [
            [['SM', 'MG', 'BK'], [(5, 210)], (398, 240)],  # 3
            [['DL', 'EF'], [(2, 215)], (335, 403)]
        ],
        [
            [['SM', 'MG', 'BK'], [(45, 244)], (398, 240)],  # 4
            [['DL', 'EF'], [(49, 242)], (307, 119)]
        ]
    ]


def buscar_spots_icarus(qtd_resets=400):
    coordenadas = []
    if qtd_resets < 50:
        coordenadas.extend([
            [
                [['SM', 'MG'], [(15, 35)], (398, 240)],  # 0
                [['DL'], [(0, 0)], (0, 0)]
            ],
            [
                [['SM', 'MG'], [(38, 28)], (398, 240)],  # 1
                [['DL'], [(0, 0)], (0, 0)]
            ],
            [
                [['SM', 'MG'], [(63, 37)], (398, 240)],  # 2
                [['DL'], [(0, 0)], (0, 0)]  # NÃO É BOM PRA ELFA
            ],
            [
                [['SM', 'MG'], [(92, 37)], (398, 240)],  # 3
                [['DL'], [(0, 0)], (0, 0)],
                [['EF'], [(92, 30)], (497, 201)]
            ],
            [
                [['SM', 'MG', 'BK'], [(85, 83)], (398, 240)],  # 4
                [['DL'], [(0, 0)], (0, 0)],
                [['EF'], [(88, 74)], (435, 217)]
            ],
            [
                [['SM', 'MG'], [(59, 70)], (398, 240)],  # 5
                [['DL'], [(0, 0)], (0, 0)]
                # NÃO É BOM PRA ELFA

            ]
        ])

    coordenadas.extend([
        [
            [['SM', 'MG', 'BK'], [(29, 67)], (398, 240)],  # 6
            [['DL'], [(0, 0)], (0, 0)],
            [['EF'], [(31, 61)], (459, 223)]

        ],
        [
            [['SM', 'MG', 'BK'], [(38, 95)], (398, 240)],  # 7
            [['DL'], [(0, 0)], (0, 0)],
            [['EF'], [(39, 87)], (467, 229)]
        ],
        [
            [['SM', 'MG', 'BK'], [(50, 123)], (398, 240)],  # 8
            [['DL'], [(0, 0)], (0, 0)],
            [['EF'], [(55, 118)], (413, 175)]

        ],
        [
            [['SM', 'MG', 'BK'], [(51, 123)], (398, 240)],  # 9
            [['DL'], [(0, 0)], (0, 0)],
            [['EF'], [(55, 157)], (243, 172)]

        ],
        [
            [['SM', 'MG', 'BK'], [(46, 158)], (398, 240)],  # 10
            [['DL'], [(0, 0)], (0, 0)],
            [['EF'], [(63, 185)], (382, 219)]

        ],
        [
            [['SM', 'MG', 'BK'], [(56, 190)], (398, 240)],  # 11
            [['DL'], [(0, 0)], (0, 0)]
        ]
    ])
    return coordenadas


def buscar_todos_spots_aida(ignorar_spot_pk=False):
    coordenadas = []
    coordenadas.extend(buscar_spots_aida_1(ignorar_spot_pk=ignorar_spot_pk))
    coordenadas.extend(buscar_spots_aida_2(ignorar_spot_pk=ignorar_spot_pk))
    coordenadas.extend(buscar_spots_aida_corredor())
    coordenadas.extend(buscar_spots_aida_final())
    coordenadas.extend(buscar_spots_aida_volta_final(ignorar_spot_pk=ignorar_spot_pk))
    return coordenadas


def buscar_spots_aida_1(ignorar_spot_pk=False):
    coordenadas = []
    coordenadas.extend([

        [
            [['SM', 'MG'], [(190, 19)], (398, 240)],  # 0
            [['DL'], [(188, 18)], (561, 370)],
            [['EF'], [(198, 17)], (356, 233)]
        ],
        [
            [['SM', 'MG'], [(176, 16)], (398, 240)],  # 1
            [['DL'], [(171, 16)], (573, 412)],
            [['EF'], [(182, 14)], (274, 157)]
        ],
        [
            [['SM', 'MG', 'BK'], [(142, 16)], (398, 240)],  # 2
            [['DL'], [(139, 16)], (520, 367)],
            [['EF'], [(152, 15)], (274, 158)]
        ],
        [
            [['SM', 'MG', 'BK'], [(112, 16)], (398, 240)],  # 3
            [['DL'], [(113, 13)], (477, 131)],
            [['EF'], [(114, 9)], (449, 220)]
        ]
    ])

    coordenadas.extend([

        [
            [['SM', 'MG'], [(152, 38)], (398, 240)]  # 4
        ],

        [
            [['SM', 'MG'], [(165, 59)], (398, 240)]  # 5
        ],

        [
            [['SM', 'MG'], [(167, 45)], (398, 240)]  # 6
        ],

        [
            [['SM', 'MG'], [(213, 33)], (398, 240)],  # 7
            [['DL'], [(215, 32)], (238, 161)],
            [['EF'], [(219, 34)], (236, 219)]
        ],

    ])

    if not ignorar_spot_pk:
        coordenadas.extend([
            [
                [['SM', 'MG'], [(225, 12)], (398, 240)],  # 8
                [['DL'], [(228, 12)], (218, 184)],
                [['EF'], [(231, 13)], (263, 210)]
            ]
        ])

    if not ignorar_spot_pk:
        coordenadas.extend([
            [
                [['SM', 'MG'], [(210, 77)], (398, 240)],  # 9
                [['DL'], [(209, 73)], (618, 154)],
                [['EF'], [(207, 67)], (545, 234)]
            ],
            [
                [['SM', 'MG', 'BK'], [(185, 96)], (398, 240)],  # 10
                [['DL'], [(189, 96)], (223, 146)],
                [['EF'], [(194, 94)], (281, 166)]
            ],
            [
                [['SM', 'MG', 'BK'], [(230, 131)], (398, 240)],  # 11
                [['DL'], [(233, 128)], (373, 120)],
                [['EF'], [(235, 124)], (405, 162)]
            ]
        ])

    return coordenadas


def buscar_spots_aida_2(ignorar_spot_pk=False):
    coordenadas = []

    if not ignorar_spot_pk:
        coordenadas.extend([
            [
                [['SM', 'MG'], [(204, 171)], (398, 240)],  # 1
                [['DL'], [(207, 171)], (206, 189)],
                [['EF'], [(213, 170)], (279, 223)]
            ]
        ])

    coordenadas.extend([
        [
            [['SM', 'MG', 'BK'], [(208, 204)], (398, 240)],  # 2
            [['DL'], [(210, 202)], (428, 139)],
            [['EF'], [(216, 203)], (323, 185)]
        ],
        [
            [['SM', 'MG', 'BK'], [(239, 226)], (398, 240)],  # 3
            [['DL'], [(240, 224)], (489, 161)],
            [['EF'], [(240, 219)], (478, 209)]
        ],
        [
            [['SM', 'MG', 'BK'], [(219, 234)], (398, 240)],  # 4
            [['DL'], [(221, 232)], (397, 127)],
            [['EF'], [(221, 226)], (472, 194)]
        ],
        [
            [['SM', 'MG', 'BK'], [(159, 229)], (398, 240)],  # 5
            [['DL'], [(162, 228)], (354, 129)],
            [['EF'], [(166, 230)], (304, 211)]
        ],
        [
            [['SM', 'MG', 'BK'], [(124, 184)], (398, 240)],  # 6
            [['DL'], [(127, 182)], (383, 118)],
            [['EF'], [(131, 178)], (368, 143)]
        ],
        [
            [['SM', 'MG', 'BK'], [(131, 231)], (398, 240)],  # 7
            [['DL'], [(134, 229)], (385, 121)],
            [['EF'], [(138, 226)], (379, 136)]
        ],
        [
            [['SM', 'MG', 'BK'], [(71, 227)], (398, 240)],  # 8
            [['DL'], [(74, 226)], (312, 167)],
            [['EF'], [(76, 231)], (265, 256)]
        ],
        [
            [['SM', 'MG', 'BK'], [(40, 224)], (398, 240)],  # 9
            [['DL'], [(44, 224)], (254, 168)],
            [['EF'], [(49, 222)], (338, 207)]
        ],
        [
            [['SM', 'MG', 'BK'], [(24, 185)], (398, 240)],  # 10
            [['DL'], [(28, 185)], (286, 174)],
            [['EF'], [(34, 187)], (269, 225)]
        ],
        [
            [['SM', 'MG', 'BK'], [(26, 118)], (398, 240)],  # 11
            [['DL'], [(29, 116)], (348, 149)],
            [['EF'], [(34, 111)], (368, 152)]
        ],
        [
            [['SM', 'MG', 'BK'], [(54, 120)], (398, 240)],  # 12
            [['DL'], [(56, 117)], (428, 148)],
            [['EF'], [(59, 114)], (417, 171)]
        ],
        [
            [['SM', 'MG'], [(89, 152)], (398, 240)],  # 13
            [['DL'], [(88, 150)], (586, 170)],
            [['EF'], [(89, 147)], (507, 193)]
        ]

    ])

    return coordenadas


def buscar_spots_aida_corredor():
    return [[
        [['SM', 'MG'], [(89, 117)], (398, 240)],  # 14
        [['DL'], [(89, 121)], (229, 396)],
        [['EF'], [(89, 125)], (141, 420)]
    ],
        [
            [['SM', 'MG'], [(89, 100)], (398, 240)],  # 15
            [['DL'], [(89, 102)], (255, 361)],
            [['EF'], [(89, 109)], (92, 420)]
        ],
        [
            [['SM', 'MG'], [(86, 83)], (398, 240)],  # 16
            [['DL'], [(87, 88)], (185, 379)],
            [['EF'], [(88, 75)], (501, 187)]
        ],
        [
            [['SM', 'MG', 'BK'], [(87, 64)], (398, 240)],  # 17
            [['DL'], [(87, 68)], (227, 383)],
            [['EF'], [(90, 58)], (475, 194)]
        ]]


def buscar_spots_aida_final():
    return [
        [
            [['SM', 'MG', 'BK'], [(118, 96)], (398, 240)],  # 18
            [['DL'], [(118, 93)], (507, 206)]
        ],
        [
            [['SM', 'MG', 'BK'], [(122, 104)], (398, 240)],  # 19
            [['DL'], [(124, 102)], (396, 150)]
        ],
        [
            [['SM', 'MG'], [(132, 104)], (398, 240)],  # 20
            [['DL'], [(131, 101)], (545, 225)]
        ],
        [
            [['SM', 'MG'], [(146, 89)], (398, 240)],  # 21
            [['DL'], [(143, 86)], (598, 262)]
        ]
    ]


def buscar_spots_aida_volta_final(ignorar_spot_pk=False):
    coordenadas = []

    if not ignorar_spot_pk:
        coordenadas.extend([
            [
                [['SM', 'MG'], [(134, 138)], (398, 240)],  # 22
                [['DL'], [(135, 141)], (234, 359)],
                [['EF'], [(196, 131)], (461, 197)]
            ]
        ])

    coordenadas.extend([
        [
            [['SM', 'MG'], [(158, 117)], (398, 240)],  # 23
            [['DL'], [(163, 117)], (222, 160)],
            [['EF'], [(167, 115)], (280, 174)]
        ],
        [
            [['SM', 'MG'], [(169, 147)], (398, 240)],  # 24
            [['DL'], [(170, 144)], (500, 165)],
            [['EF'], [(171, 139)], (500, 181)]
        ],
        [
            [['SM', 'MG'], [(163, 165)], (398, 240)],  # 25
            [['DL'], [(168, 164)], (247, 177)],
            [['EF'], [(171, 167)], (348, 245)]
        ]
    ])

    return coordenadas


def buscar_spots_kalima():
    return [
        [
            [['SM', 'MG'], [(107, 26)], (398, 240)],  # 0
            [['DL'], [(106, 23)], (476, 224)]
        ],
        [
            [['SM', 'MG', 'BK'], [(117, 56)], (398, 240)],  # 1
            [['DL'], [(117, 52)], (542, 155)]
        ],
        [
            [['SM', 'MG'], [(118, 88)], (398, 240)],  # 1
            [['DL'], [(117, 84)], (512, 218)]
        ],
        [
            [['SM', 'MG', 'BK'], [(30, 65)], (398, 240)],  # 1
            [['DL'], [(33, 63)], (369, 159)]
        ],
        [
            [['SM', 'MG'], [(85, 13)], (398, 240)],  # 1
            [['DL'], [(85, 8)], (491, 222)]
        ]
    ]


def buscar_spots_land():
    return [
        [
            [['SM', 'MG'], [(96, 93)], (398, 240)],  # 0
            [['DL'], [(100, 93)], (256, 170)],
            [['EF'], [(104, 92)], (276, 182)]
        ],
        [
            [['SM', 'MG', 'BK'], [(120, 78)], (398, 240)],  # 1
            [['DL'], [(124, 81)], (156, 229)],
            [['EF'], [(127, 80)], (316, 247)]
        ],
        [
            [['SM', 'MG'], [(155, 83)], (398, 240)],  # 2
            [['DL'], [(157, 84)], (217, 169)],
            [['EF'], [(161, 84)], (315, 226)]
        ],
        [
            [['SM', 'MG'], [(159, 64)], (398, 240)],  # 3
            [['EF'], [(162, 58)], (456, 217)]
        ],
        [
            [['SM', 'MG'], [(166, 40)], (398, 240)],  # 4
            [['DL'], [(170, 39)], (227, 168)],
            [['EF'], [(173, 39)], (227, 168)]
        ],
        [
            [['SM', 'MG', 'BK'], [(186, 19)], (398, 240)],  # 5
            [['DL'], [(191, 19)], (225, 160)],
            [['EF'], [(193, 18)], (343, 232)]
        ],
        [
            [['SM', 'MG'], [(211, 15)], (398, 240)],  # 6
            [['DL'], [(215, 16)], (371, 265)],
            [['EF'], [(218, 16)], (351, 254)]
        ],
        [
            [['SM', 'MG', 'BK'], [(231, 38)], (398, 240)],  # 7
            [['DL'], [(234, 35)], (401, 113)],
            [['EF'], [(238, 35)], (373, 210)]
        ],
        [
            [['SM', 'MG', 'BK'], [(207, 59)], (398, 240)],  # 8
            [['DL'], [(212, 58)], (293, 157)],
            [['EF'], [(214, 58)], (348, 224)]
        ],
        [
            [['BK'], [(233, 66)], (398, 240)],  # 9
            [['DL'], [(234, 63)], (456, 139)]
        ],
        [
            [['SM', 'MG', 'BK'], [(232, 89)], (398, 240)],  # 10
            [['DL'], [(229, 85)], (624, 240)],
            [['EF'], [(232, 82)], (538, 215)]
        ],
        [
            [['BK'], [(216, 109)], (398, 240)],  # 11
            [['DL'], [(219, 112)], (151, 233)]
        ],
        [
            [['BK'], [(226, 137)], (398, 240)],  # 12
            [['DL'], [(224, 133)], (618, 192)]
        ],
        [
            [['SM', 'MG'], [(226, 180)], (398, 240)]  # 13
        ],
        [
            [['SM', 'MG', 'BK'], [(229, 207)], (398, 240)],  # 14
            [['DL'], [(234, 207)], (179, 152)],
            [['EF'], [(223, 205)], (432, 285)]
        ],
        [
            [['SM', 'MG'], [(200, 200)], (398, 240)],  # 15
            [['DL'], [(201, 198)], (494, 169)],
            [['EF'], [(204, 195)], (435, 162)]
        ],
        [
            [['SM', 'MG'], [(188, 185)], (398, 240)],  # 16
            [['DL'], [(192, 185)], (275, 153)],
            [['EF'], [(196, 185)], (283, 201)]
        ],
        [
            [['SM', 'MG'], [(190, 159)], (398, 240)],  # 17
            [['DL'], [(189, 153)], (561, 151)],
            [['EF'], [(188, 151)], (555, 184)]
        ],
        [
            [['SM', 'MG', 'BK'], [(188, 135)], (398, 240)],  # 18
            [['DL'], [(185, 139)], (360, 468)],
            [['EF'], [(172, 90)], (344, 197)]
        ],
        [
            [['BK'], [(172, 125)], (398, 240)],  # 19
            [['DL'], [(175, 128)], (143, 274)]
        ],
        [
            [['SM', 'MG', 'BK'], [(189, 109)], (398, 240)],  # 20
            [['DL'], [(185, 107)], (626, 320)],
            [['EF'], [(193, 102)], (446, 199)]
        ],
        [
            [['SM', 'MG', 'BK'], [(184, 89)], (398, 240)],  # 21
            [['DL'], [(188, 90)], (169, 187)],
            [['EF'], [(192, 91)], (292, 234)]
        ],
        [
            [['BK'], [(147, 125)], (398, 240)],  # 22
            [['DL'], [(151, 122)], (359, 126)]
        ],
        [
            [['SM', 'MG', 'BK'], [(128, 145)], (398, 240)],  # 23
            [['DL'], [(132, 145)], (247, 172)],
            [['EF'], [(136, 145)], (334, 229)]
        ],
        [
            [['BK'], [(94, 136)], (398, 240)],  # 24
            [['DL'], [(99, 139)], (116, 238)]
        ],
        [
            [['SM', 'MG', 'BK'], [(64, 132)], (398, 240)],  # 25
            [['DL'], [(68, 131)], (369, 252)],
            [['EF'], [(72, 134)], (310, 240)]
        ],
        [
            [['SM', 'MG', 'BK'], [(71, 119)], (398, 240)],  # 26
            [['DL'], [(71, 116)], (511, 178)],
            [['EF'], [(76, 112)], (409, 168)]
        ],
        [
            [['SM', 'MG'], [(70, 103)], (398, 240)],  # 27
            [['DL'], [(76, 102)], (259, 197)],
            [['EF'], [(79, 103)], (332, 236)]
        ],
        [
            [['SM', 'MG'], [(52, 52)], (398, 240)],  # 28
            [['DL'], [(76, 102)], (352, 352)],
            [['EF'], [(64, 53)], (317, 219)]
        ],
        [
            [['BK'], [(101, 32)], (398, 240)],  # 29
            [['DL'], [(98, 31)], (563, 303)]
        ],
        [
            [['SM', 'MG'], [(141, 36)], (398, 240)],  # 30
            [['EF'], [(150, 37)], (322, 224)]
        ]
    ]
